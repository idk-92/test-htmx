package video_player

import (
	"main/app/base"
	// "main/app/index/components"
)

templ VideoPlayerPage() {
	@base.DocType()
	@base.Head("HTMX Example")
	@base.Body(pageIndex())
}

templ pageIndex() {
	<div class="p-2">
		// @dropzone()
		//input tag to upload file
		<input type="file" id="videoUpload"/>
		<video width="320" height="240" style="display:none" controls autoplay="false">
			Your browser does not support the video tag.
		</video>
		// <div id="video-container" class="video-container">
		// 	<video src="" width="" height="" uk-video="autoplay: false" controls></video>
		// </div>
		<script>
       document.getElementById("videoUpload").onchange = function(event) {
        let file = event.target.files[0];
        let blobURL = URL.createObjectURL(file);
        document.querySelector("video").style.display = 'block';
        document.querySelector("video").src = blobURL;
        }
        </script>
	</div>
}

templ dropzone() {
	<div class="js-upload !cursor-pointer uk-placeholder uk-text-center .uk-dragover " uk-form-custom>
		<span uk-icon="icon: cloud-upload"></span>
		<span class="uk-text-middle !cursor-pointer">Attach binaries by dropping them here or</span>
		<input type="file" multiple/>
		// <span class="uk-link">selecting one</span>
	</div>
	<progress
		id="js-progressbar"
		class="uk-progress"
		value="0"
		max="100"
		hidden
	></progress>
	<script>
  var bar = document.getElementById("js-progressbar");
 
  UIkit.upload(".js-upload", {
    url: "localhost:3333/video-upload",
    multiple: true,
 
    beforeSend: function () {
      console.log("beforeSend", arguments);
    },
    beforeAll: function () {
      console.log("beforeAll", arguments);
    },
    load: function () {
      console.log("load", arguments);
    },
    error: function () {
      console.log("error", arguments);
    },
    complete: function () {
      console.log("complete", arguments);
    },
 
    loadStart: function (e) {
      console.log("loadStart", arguments);
 
      bar.removeAttribute("hidden");
      bar.max = e.total;
      bar.value = e.loaded;
    },
 
    progress: function (e) {
      console.log("progress", arguments);
 
      bar.max = e.total;
      bar.value = e.loaded;
    },
 
    loadEnd: function (e) {
      console.log("loadEnd", arguments);
 
      bar.max = e.total;
      bar.value = e.loaded;
    },
 
    completeAll: function () {
      console.log("completeAll", arguments);
 
      setTimeout(function () {
        bar.setAttribute("hidden", "hidden");
      }, 1000);
 
      alert("Upload Completed");
    },
  });


  document.getElementById("videoUpload").onchange = function(event) {
  let file = event.target.files[0];
  let blobURL = URL.createObjectURL(file);
  document.querySelector("video").style.display = 'block';
  document.querySelector("video").src = blobURL;
}

$(function() {
    $('.upload-video-file').on('change', function(){
      if (isVideo($(this).val())){
        $('.video-preview').attr('src', URL.createObjectURL(this.files[0]));
        $('.video-prev').show();
      }
      else
      {
        $('.upload-video-file').val('');
        $('.video-prev').hide();
        alert("Only video files are allowed to upload.")
      }
    });
});

// If user tries to upload videos other than these extension , it will throw error.
function isVideo(filename) {
    var ext = getExtension(filename);
    switch (ext.toLowerCase()) {
    case 'm4v':
    case 'avi':
    case 'mp4':
    case 'mov':
    case 'mpg':
    case 'mpeg':
        // etc
        return true;
    }
    return false;
}

function getExtension(filename) {
    var parts = filename.split('.');
    return parts[parts.length - 1];
}
</script>
}
