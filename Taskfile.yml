version: '3'

tasks:
  build:
    cmds:
      - go build -v -i main.go

  assets:
  # npx esbuild js/index.ts --bundle --outdir=assets/ --watch


    cmds:
      - esbuild --bundle --minify css/index.css > public/bundle.css

  reset-db:
    cmds:
      - rm -rf volumes/db/data && docker-compose down && docker-compose up -d

  live-tw:
    cmds:
      - npx tailwindcss -o ./dist/tailwind.css --minify --watch
  live-templ:
    cmds:
      - templ generate --watch --proxy="http://localhost:1323" --open-browser=false -v

  up:
  # assets,
    deps: [live-tw, live-templ,be]

  be:
    cmds:
      - docker-compose up && air
  down:
    cmds:
      - docker-compose down

  db-up:
    cmds:
      - GOOSE_DRIVER=postgres GOOSE_DBSTRING=$LOCAL_POSTGRES_URL GOOSE_MIGRATION_DIR=/Users/idk/Projects/personal/test-htmx/db/migrations goose up

  db-down:
    cmds:
      - GOOSE_DRIVER=postgres GOOSE_DBSTRING=$LOCAL_POSTGRES_URL GOOSE_MIGRATION_DIR=/Users/idk/Projects/personal/test-htmx/db/migrations goose down

  sqlc-verify:
    cmds:
      - sqlc compile && sqlc vet
# npx tailwindcss -i ./input.css -o ./assets/styles.css --minify --watch

#   cmd = "templ generate --proxy http://localhost:1323 && npx tailwindcss -o ./dist/tailwind.css && go build -o ./tmp/main ."
